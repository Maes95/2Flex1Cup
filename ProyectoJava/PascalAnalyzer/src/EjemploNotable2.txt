program EjemploNotable;
	function areaCuadrado ( lado: REAL ) : REAL ;
	type miArray = array [ 10 .. 5 ] of INTEGER ;
	var
		resultado: REAL;
	        unArray: miArray;
	        otroArray: miArray;
	begin
		resultado := +0.0;
		unArray[1] := 0;
		resultado := lado * lado + miArray[ 1 + 2 ];
	        unArray :=  otroArray;
		areaCuadrado := resultado;
	end;

function unaFuncion ( lado: REAL ) : REAL ;
	function unaFuncion2 ( lado: REAL ) : REAL ;
	var
		resultado, b: REAL;
		i: INTEGER;
	begin
		resultado := +0.0;
		lado := 1;
		for i := 1 to 10 do
		begin
		    valor4 := valor4 + i;
				valor4 := valor4 + 2;
		end

		for b := 1 to 10 do
		begin
				valor4 := valor4 + i;
				valor4 := valor4 + 2;
		end
	end;
var
	resultado: REAL;
begin
	resultado := +0.0;
	lado := 2;
end;

procedure intercambio ( v1, v2: INTEGER )  ;
var
	aux: INTEGER;
begin
	if ( v1 <> v2 ) then
	begin

		case valor3 of
		    1 : resultado := 1;
		    2 : resultado := 2;
		    3 : resultado := 3;
		    4 : resultado := 4;
		end

		case aux of
		    1 : resultado := 1;
		    2 : resultado := 2;
		    3 : resultado := 3;
		    4 : resultado := 4;
		end

		aux := 0;
		aux := v1;
		v1 := v2;
		v2 := aux;
	end
end;

type
	TVector = array [1..25] of REAL;
	TPunto = record
              coordenadaX: INTEGER;
              coordenadaY: INTEGER
             end;
const
	MAX = 2;
var
	medida: REAL;
	valor1, valor2, v1, v2: INTEGER;
begin
	string := 'You''re fsdf';
	medida := $4.A;
	if ( v1 <> v2 ) then
		valor1:= MAX div 2;
	else
		valor1:= 3;

	if ( v1 <> v2 ) then intercambio(valor1, valor2);
	valor1 := -3;
	valor2 := $F6;
	while 1 + 2 do medida := areaCuadrado( medida );
	intercambio(valor1, valor2);
	while medida < valor1 do
	if ( 1 + 2 ) then
	begin
		aux := 0;
		aux := v1;
		v1 := v2;
		v2 := aux;
	end
end.
